{"ast":null,"code":"var _jsxFileName = \"/Users/victoriakim/MyFirstReactProject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Plus, Minus } from 'lucide-react';\n//I need to import useState because its a special hook from React that let's me manage states etc,\n// I also need to import the lucide-react library to use the icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterApp = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  //I'm using the useState hook, which can return a state variable and a setter function. \n  const increase = () => {\n    setCount(count + 1);\n  };\n  //Creating a function that increases count by one when called.\n\n  const decrease = () => {\n    setCount(count - 1);\n  };\n  //Creating a function that decreases count by one when called.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col min-w-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl\",\n        children: \"Hello, this is my first react app. It is a counter... in case you forgot how to count or if you need to count more than the number of fingers you have.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-direction items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decrease,\n          className: \"flex p-2\",\n          style: {\n            backgroundColor: '#EEE7DD'\n          },\n          children: /*#__PURE__*/_jsxDEV(Minus, {\n            size: 24,\n            color: \"#593E21\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increase,\n          className: \"flex p-2\",\n          style: {\n            backgroundColor: '#EEE7DD'\n          },\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            size: 24,\n            color: \"#593E21\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterApp, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = CounterApp;\nexport default CounterApp;\nvar _c;\n$RefreshReg$(_c, \"CounterApp\");","map":{"version":3,"names":["React","useState","Plus","Minus","jsxDEV","_jsxDEV","CounterApp","_s","count","setCount","increase","decrease","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","size","color","_c","$RefreshReg$"],"sources":["/Users/victoriakim/MyFirstReactProject/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Plus, Minus } from 'lucide-react';\n//I need to import useState because its a special hook from React that let's me manage states etc,\n// I also need to import the lucide-react library to use the icons\n\nconst CounterApp = () => {\n  const [count, setCount] = useState(0)\n  //I'm using the useState hook, which can return a state variable and a setter function. \n  const increase = () => {\n    setCount(count + 1);\n  };\n  //Creating a function that increases count by one when called.\n\n  const decrease = () => {\n    setCount(count - 1);\n  };\n  //Creating a function that decreases count by one when called.\n  return (\n    <div className=\"flex min-h-screen items-center justify-center\">\n      <div className=\"flex flex-col min-w-1\">\n      <p className=\"text-2xl\">Hello, this is my first react app.\n      It is a counter... in case you forgot how to count or if you need to count more than the number of fingers you have.</p>\n      <div className=\"flex flex-direction items-center gap-2\">\n      <button \n      onClick={decrease}\n      className=\"flex p-2\" \n      style={{ backgroundColor: '#EEE7DD' }}><Minus size={24} color='#593E21'/></button>\n      <span>{count}</span>\n      <button \n      onClick={increase}\n      className=\"flex p-2\" \n      style={{ backgroundColor: '#EEE7DD' }}><Plus size={24} color='#593E21'/></button>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default CounterApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,EAAEC,KAAK,QAAQ,cAAc;AAC1C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA,MAAMS,QAAQ,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EACD;;EAEA,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrBF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EACD;EACA,oBACEH,OAAA;IAAKO,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC5DR,OAAA;MAAKO,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACtCR,OAAA;QAAGO,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAC4F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxHZ,OAAA;QAAKO,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACvDR,OAAA;UACAa,OAAO,EAAEP,QAAS;UAClBC,SAAS,EAAC,UAAU;UACpBO,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAP,QAAA,eAACR,OAAA,CAACF,KAAK;YAACkB,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClFZ,OAAA;UAAAQ,QAAA,EAAOL;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBZ,OAAA;UACAa,OAAO,EAAER,QAAS;UAClBE,SAAS,EAAC,UAAU;UACpBO,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAP,QAAA,eAACR,OAAA,CAACH,IAAI;YAACmB,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAV,EAAA,CA/BKD,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}